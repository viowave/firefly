var p=Object.defineProperty;var g=(i,t,e)=>t in i?p(i,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):i[t]=e;var h=(i,t,e)=>(g(i,typeof t!="symbol"?t+"":t,e),e);const l={DEFAULT_PLAYER_COUNT:2,DEFAULT_CREW_NEEDED:1};window.APP_ENV==="production"?l.API_BASE_URL="http://cheatersnever.win/firefly":l.API_BASE_URL={}.API_BASE_URL||"http://firefly.test";class f{constructor(){h(this,"r");this.form=document.querySelector("form"),this.elements={roles:document.getElementById("requiredRoles"),sources:document.getElementById("targetSources"),playerCount:document.getElementById("playerCountButtons"),crewNeeded:document.getElementById("crewNeededButtons"),draftLeader:document.getElementById("draftLeaderButton"),selectAllSources:document.getElementById("selectAllSources"),playerNames:document.getElementById("playerNames"),resultsContainer:document.querySelector(".resultsWrapper"),initialWrapper:document.querySelector(".wrapper")},this.inputs={roles:this.createHiddenInput("requiredRoleIds"),sources:this.createHiddenInput("targetSourceIds"),playerCount:document.getElementById("numPlayersInput"),crewNeeded:document.getElementById("numCrewNeededInput"),draftLeader:document.getElementById("draftLeaderInput")},this.data={roles:[],sources:[]},this.init()}get maxSelectableRoles(){return parseInt(this.inputs.crewNeeded.value,10)||l.DEFAULT_CREW_NEEDED}async init(){try{await Promise.all([this.fetchRoles(),this.fetchSources()]),this.initToggleGroup(this.elements.playerCount,this.inputs.playerCount,[1,2,3,4,5],l.DEFAULT_PLAYER_COUNT,t=>this.updatePlayerNameInputs(t)),this.initToggleGroup(this.elements.crewNeeded,this.inputs.crewNeeded,[1,2,3,4,5],l.DEFAULT_CREW_NEEDED),this.initDraftLeaderToggle(),this.form.addEventListener("submit",t=>this.handleFormSubmit(t))}catch(t){this.showError("Failed to initialize setup. Please try refreshing the page."),console.error("Initialization error:",t)}}createHiddenInput(t){const e=document.createElement("input");return e.type="hidden",e.name=t,e.id=`${t}Input`,e.value="",this.form.appendChild(e),e}createToggleButton(t,e,s,r,n){const o=document.createElement("button");return o.type="button",o.classList.add(e),o.textContent=t,o.dataset[s]=r,o.setAttribute("aria-pressed","false"),o.addEventListener("click",n),o}async fetchData(t){try{this.showLoading(t);const e=await fetch(`${l.API_BASE_URL}/api/${t}/`);if(!e.ok)throw new Error(`API error: ${e.status}`);return await e.json()}catch(e){return console.error(`Error fetching ${t}:`,e),this.showError(`Failed to load ${t}. Please try again.`),[]}finally{this.hideLoading(t)}}async fetchRoles(){this.data.roles=await this.fetchData("roles"),this.renderRoles()}async fetchSources(){this.data.sources=await this.fetchData("sources"),this.renderSources()}renderRoles(){const t=this.elements.roles;this.data.roles.forEach(e=>{const s=this.createToggleButton(e.name,"role-button","roleId",e.id,()=>{const r=s.classList.contains("selected"),n=document.querySelectorAll(".role-button.selected").length,o=this.maxSelectableRoles;if(!r&&n>=o){this.showError(`You can only select up to ${o} role(s).`);return}s.classList.toggle("selected"),s.setAttribute("aria-pressed",!r),this.updateInputFromSelection(".role-button.selected","roleId",this.inputs.roles)});t.appendChild(s)})}renderSources(){const t=this.elements.sources;this.data.sources.forEach((e,s)=>{const r=this.createToggleButton(e.source_name,"source-button","sourceId",e.source_id,()=>{r.classList.toggle("selected"),r.setAttribute("aria-pressed",r.classList.contains("selected")),this.updateSourceInput()});t.appendChild(r),s===0&&(r.classList.add("selected"),r.setAttribute("aria-pressed","true"))}),this.elements.selectAllSources.addEventListener("click",()=>{const e=!this.elements.selectAllSources.classList.contains("selected");document.querySelectorAll(".source-button").forEach(s=>{s.classList.toggle("selected",e),s.setAttribute("aria-pressed",e)}),this.elements.selectAllSources.classList.toggle("selected",e),this.elements.selectAllSources.setAttribute("aria-pressed",e),this.updateSourceInput()}),this.updateSourceInput()}updateInputFromSelection(t,e,s){const r=[...document.querySelectorAll(t)].map(n=>n.dataset[e]);s.value=r.join(",")}updateSourceInput(){this.updateInputFromSelection(".source-button.selected","sourceId",this.inputs.sources);const t=document.querySelectorAll(".source-button.selected").length===this.data.sources.length;this.elements.selectAllSources.classList.toggle("selected",t),this.elements.selectAllSources.setAttribute("aria-pressed",t)}initToggleGroup(t,e,s,r,n=null){s.forEach(a=>{const d=this.createToggleButton(a.toString(),"number-button","count",a.toString(),()=>{if(t.querySelectorAll("button").forEach(c=>{c.classList.remove("selected"),c.setAttribute("aria-pressed","false")}),d.classList.add("selected"),d.setAttribute("aria-pressed","true"),e.value=a,t===this.elements.crewNeeded){const c=[...document.querySelectorAll(".role-button.selected")],u=this.maxSelectableRoles;c.length>u&&(c.slice(u).forEach(m=>{m.classList.remove("selected"),m.setAttribute("aria-pressed","false")}),this.updateInputFromSelection(".role-button.selected","roleId",this.inputs.roles))}n&&n(a)});t.appendChild(d)});const o=t.querySelector(`[data-count="${r}"]`);o&&(o.classList.add("selected"),o.setAttribute("aria-pressed","true"),e.value=r,n&&n(r))}initDraftLeaderToggle(){const t=this.elements.draftLeader,e=this.inputs.draftLeader;e.value="0",t.setAttribute("aria-pressed","false"),t.addEventListener("click",()=>{const s=t.classList.toggle("selected");t.setAttribute("aria-pressed",s),e.value=s?"1":"0"})}showLoading(t){const e=this.elements[t];if(e){e.classList.add("loading");const s=document.createElement("div");s.className="loading-indicator",s.textContent="Loading...",e.appendChild(s)}}hideLoading(t){const e=this.elements[t];if(e){e.classList.remove("loading");const s=e.querySelector(".loading-indicator");s&&s.remove()}}showError(t){const e=document.createElement("div");e.className="error-message",e.textContent=t,this.form.insertBefore(e,this.form.firstChild),setTimeout(()=>{e.remove()},5e3)}validateForm(t){const e=this.form.querySelector(".error-message");e&&e.remove();const s=document.querySelectorAll(".role-button.selected").length,r=this.maxSelectableRoles,n=parseInt(this.inputs.playerCount.value,10);for(let o=1;o<=n;o++){const a=document.getElementById(`playerName${o}`);if(!a||!a.value.trim()){t.preventDefault(),this.showError(`Please enter a name for Player ${o}.`);return}}if(s>r){t.preventDefault(),this.showError(`You have selected ${s} roles, but can only select a maximum of ${r}.`);return}}updatePlayerNameInputs(t){const e=this.elements.playerNames;e.innerHTML="";for(let s=1;s<=t;s++){const r=document.createElement("label");r.textContent=`Player Name ${s}:`,r.setAttribute("for",`playerName${s}`);const n=document.createElement("input");n.type="text",n.id=`playerName${s}`,n.name=`playerName${s}`,n.className="player-name-input",n.placeholder=`Player ${s}`;const o=document.createElement("div");o.className="player-name-input-group",o.appendChild(r),o.appendChild(n),e.appendChild(o)}}getFormData(){const t=new FormData(this.form),e=parseInt(this.inputs.playerCount.value,10);for(let s=1;s<=e;s++){const r=document.getElementById(`playerName${s}`);r&&!r.value.trim()&&t.set(`playerName${s}`,`Player ${s}`)}return t}async handleFormSubmit(t){t.preventDefault(),this.validateForm(t);const e=this.getFormData(),s=this.elements.resultsContainer,r=document.getElementById("loading-overlay");s&&(s.innerHTML="");try{r&&r.classList.add("active"),this.showLoading("resultsContainer"),window.scrollTo(0,0);const n=await fetch("run_draft.php",{method:"POST",body:e,headers:{"X-Requested-With":"XMLHttpRequest"}});if(!n.ok)throw new Error(`HTTP error! status: ${n.status}`);const o=await n.text();await new Promise(a=>setTimeout(a,100)),s?(s.innerHTML=o,this.elements.initialWrapper&&this.elements.initialWrapper.remove(),await new Promise(a=>setTimeout(a,500)),r&&r.classList.remove("active")):(console.error("Error: .resultsWrapper container not found in the DOM."),this.showError("Failed to display results. Please try again."))}catch(n){console.error("Error submitting form:",n),this.showError("Failed to run the draft. Please try again.")}finally{r&&r.classList.remove("active"),this.hideLoading("resultsContainer")}}showLoading(t){const e=this.elements[t];if(e&&!document.getElementById("loading-overlay")){e.classList.add("loading");const s=document.createElement("div");s.className="loading-indicator",s.textContent="Loading...",e.appendChild(s)}}hideLoading(t){const e=this.elements[t];if(e){e.classList.remove("loading");const s=e.querySelector(".loading-indicator");s&&s.remove()}}}document.addEventListener("DOMContentLoaded",()=>{window.fireflySetup=new f});
